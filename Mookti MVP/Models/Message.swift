//
//  Message.swift
//  Mookti
//
//  Created by GPT‑Assistant on 2025‑06‑29.
//

import Foundation

/// A single bubble in the Ellen chat timeline.
struct Message: Identifiable, Codable, Hashable, Sendable {

    // MARK: - Nested types
    /// Origin of the message, used for styling and logic.
    enum Role: String, Codable {
        case user      // The learner
        case ellen     // The AI tutor
        case system    // Non‑interactive narration & branching nodes
    }
    
    /// Source of the content
    enum ContentSource: String, Codable {
        case csv           // Direct from CSV (human-written)
        case aiGenerated   // Generated by LLM
        case aiRetrieved   // Retrieved by AI from human-written content
    }

    // MARK: - Stored properties
    let id: UUID
    let role: Role
    var content: String
    let timestamp: Date
    let source: ContentSource
    var carouselPayload: CardCarouselPayload?

    // MARK: - Initialiser
    init(id: UUID = UUID(),
         role: Role,
         content: String,
         timestamp: Date = .now,
         source: ContentSource = .csv,
         carouselPayload: CardCarouselPayload? = nil)
    {
        self.id        = id
        self.role      = role
        self.content   = content
        self.timestamp = timestamp
        self.source    = source
        self.carouselPayload = carouselPayload
    }
}

// MARK: - Preview helpers (DEBUG only)
#if DEBUG
extension Message {
    /// Quick sample transcript for SwiftUI previews.
    static let sampleTranscript: [Message] = [
        .init(role: .system, content: "Welcome to Mookti!"),
        .init(role: .ellen,  content: "Hi, I'm Ellen. Ask me anything."),
        .init(role: .user,   content: "How do I improve my Cultural Intelligence?")
    ]
}
#endif
